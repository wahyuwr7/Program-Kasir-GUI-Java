/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ProjectPBO;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RAMA
 */
public class Restock extends javax.swing.JFrame {

    private String supplierid = null;
    private String pembelianid = null;
    private String barangid = null;
    private String harga = null;
    private int tharga = 0;
    private int totalharga = 0;
    private void CbSupplier() throws SQLException{
        String sql = "SELECT * FROM supplier";
        try{
            java.sql.Connection conn = (Connection)Config.configDB(); 
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            Statement stm = (Statement)conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next()){
                cbid.addItem(rs.getString(2));
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void Cbnama() throws SQLException{
        String sql = "SELECT * FROM barang";
        try{
            java.sql.Connection conn = (Connection)Config.configDB(); 
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            Statement stm = (Statement)conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next()){
                cbnama.addItem(rs.getString(2));
            }
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    private void admin(){
        String id = Sesi.get_id();
        String sql ="SELECT * FROM pegawai WHERE user_id= "+id+";";
        
        try{
            java.sql.Connection conn = (Connection)Config.configDB();
            java.sql.PreparedStatement pstm;
            pstm = conn.prepareStatement(sql);
            ResultSet rs = pstm.executeQuery();
            
            while(rs.next()){
                jadmin.setText(rs.getString("pegawai_nama"));
            }
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void tampilkanbarang(String query){
        tharga = 0;
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn ("Nama barang");
        model.addColumn ("Merk");
        model.addColumn ("Nama supplier");
        model.addColumn ("Jumlah pembelian");
        model.addColumn ("Harga barang");
        model.addColumn ("Total Pembelian");
        try{
            String sql = query;
            java.sql.Connection conn;
            conn = (Connection)Config.configDB();
            java.sql.Statement stm = conn.createStatement();
            java.sql.ResultSet res = stm.executeQuery(sql);
            
            while(res.next()){
                tharga = Integer.parseInt(res.getString(5)) * Integer.parseInt(res.getString(4));
                model.addRow(new Object[]{res.getString(1),res.getString(2), res.getString(3), res.getString(4), "Rp."+res.getString(5),"Rp."+tharga});
            }
            totalharga = totalharga + tharga;
            tharga = 0;
            tabelbarang.setModel(model);
            
        }catch(SQLException e){
            System.out.println("Error "+ e.getMessage());
        }
    }
    
    public Restock() throws SQLException {
        initComponents();
        tampilkanbarang("SELECT barang.`barang_nama`, barang.`barang_merk`, supplier.`supplier_nama`, detail_pembelian.`dpembelian_jumlah`, barang.`barang_harga` "
                + "FROM detail_pembelian INNER JOIN barang ON barang.`barang_id` = detail_pembelian.`barang_id`"
                + "INNER JOIN pembelian ON pembelian.`pembelian_id` = detail_pembelian.`pembelian_id`"
                + "INNER JOIN supplier ON supplier.`supplier_id` = pembelian.`supplier_id`"
                + "WHERE pembelian.`pembelian_id` = "+pembelianid+";");
        CbSupplier();
        admin();
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbtransaksi = new javax.swing.JTable();
        clGradientPanel1 = new ProjectPBO.ClGradientPanel();
        jButton1 = new javax.swing.JButton();
        btnbuat = new javax.swing.JButton();
        cbid = new javax.swing.JComboBox<>();
        cbnama = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtjumlah = new javax.swing.JTextField();
        jadmin = new javax.swing.JLabel();
        btninput = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelbarang = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        tbtransaksi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbtransaksi);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Selesai");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnbuat.setText("Buat");
        btnbuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuatActionPerformed(evt);
            }
        });

        cbid.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbidItemStateChanged(evt);
            }
        });
        cbid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbidActionPerformed(evt);
            }
        });

        cbnama.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbnamaItemStateChanged(evt);
            }
        });
        cbnama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbnamaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        jLabel1.setText("Restock");

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel11.setText("Jumlah barang");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel2.setText("Admin : ");

        txtjumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtjumlahActionPerformed(evt);
            }
        });

        jadmin.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N

        btninput.setText("Input");
        btninput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninputActionPerformed(evt);
            }
        });

        tabelbarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelbarang);

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel8.setText("Nama Supplier");

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel10.setText("Nama barang");

        javax.swing.GroupLayout clGradientPanel1Layout = new javax.swing.GroupLayout(clGradientPanel1);
        clGradientPanel1.setLayout(clGradientPanel1Layout);
        clGradientPanel1Layout.setHorizontalGroup(
            clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(clGradientPanel1Layout.createSequentialGroup()
                        .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(clGradientPanel1Layout.createSequentialGroup()
                                .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cbid, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbnama, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtjumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, clGradientPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(clGradientPanel1Layout.createSequentialGroup()
                                .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btninput)
                                    .addComponent(btnbuat))
                                .addGap(6, 6, 6)))
                        .addGap(28, 28, 28)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        clGradientPanel1Layout.setVerticalGroup(
            clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(clGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jadmin, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(clGradientPanel1Layout.createSequentialGroup()
                        .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cbid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addComponent(btnbuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(cbnama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(clGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtjumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btninput))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clGradientPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(clGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String sql = "UPDATE `pembelian` SET `pembelian_total` = "+totalharga+" WHERE `pembelian`.`pembelian_id` = "+pembelianid+";";
        try{
            java.sql.Connection conn = (Connection)Config.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            pstm.execute();
            JOptionPane.showMessageDialog(null, "Berhasil");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        supplierid = null;
        pembelianid = null;
        barangid = null;
        harga = null;
        tharga = 0;
        totalharga = 0;
        this.dispose();
        try {
            new Gudang().setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Restock.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnbuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuatActionPerformed
        String pegawai = Sesi.get_pegawai_id();
        String sql = "INSERT INTO `pembelian` (`pembelian_id`, `supplier_id`, `pegawai_id`, `pembelian_date`, `pembelian_total`) "
                + "VALUES (NULL, '"+supplierid+"', '"+pegawai+"', now(), '0');";
        try{
            java.sql.Connection conn = (Connection)Config.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            pstm.execute();
            JOptionPane.showMessageDialog(null, "Berhasil");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        sql = "SELECT * FROM pembelian ORDER BY pembelian_id DESC LIMIT 1;";
        try{
            java.sql.Connection conn = (Connection)Config.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            Statement stm = (Statement)conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next()){
                pembelianid = rs.getString(1);
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }

        if(pembelianid !=null){
            try {
                Cbnama();
            } catch (SQLException ex) {
                Logger.getLogger(Kasir.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnbuatActionPerformed

    private void cbidItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbidItemStateChanged

    }//GEN-LAST:event_cbidItemStateChanged

    private void cbidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbidActionPerformed
        String sql = "SELECT * FROM supplier WHERE supplier_nama = '"+cbid.getSelectedItem()+"';";
        try{
            java.sql.Connection conn = (Connection)Config.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            Statement stm = (Statement)conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next()){
                supplierid = rs.getString(1);
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_cbidActionPerformed

    private void cbnamaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbnamaItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbnamaItemStateChanged

    private void cbnamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbnamaActionPerformed
        String sql = "SELECT * FROM barang WHERE barang_nama = '"+cbnama.getSelectedItem()+"';";
        try{
            java.sql.Connection conn = (Connection)Config.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            Statement stm = (Statement)conn.createStatement();
            ResultSet rs = stm.executeQuery(sql);
            while(rs.next()){
                harga = rs.getString(5);
                barangid = rs.getString(1);
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_cbnamaActionPerformed

    private void txtjumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtjumlahActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtjumlahActionPerformed

    private void btninputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninputActionPerformed
        int tharga = 0;
        String sql = "INSERT INTO detail_pembelian VALUES (NULL, "+pembelianid+","+barangid+", "+txtjumlah.getText()+");";
        try{
            java.sql.Connection conn = (Connection)Config.configDB();
            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);
            pstm.execute();
            tampilkanbarang("SELECT barang.`barang_nama`, barang.`barang_merk`, supplier.`supplier_nama`, detail_pembelian.`dpembelian_jumlah`, barang.`barang_harga` "
                + "FROM detail_pembelian INNER JOIN barang ON barang.`barang_id` = detail_pembelian.`barang_id`"
                + "INNER JOIN pembelian ON pembelian.`pembelian_id` = detail_pembelian.`pembelian_id`"
                + "INNER JOIN supplier ON supplier.`supplier_id` = pembelian.`supplier_id`"
                + "WHERE pembelian.`pembelian_id` = "+pembelianid+";");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }

       
    }//GEN-LAST:event_btninputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Restock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Restock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Restock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Restock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Restock().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Restock.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnbuat;
    private javax.swing.JButton btninput;
    private javax.swing.JComboBox<String> cbid;
    private javax.swing.JComboBox<String> cbnama;
    private ProjectPBO.ClGradientPanel clGradientPanel1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jadmin;
    private javax.swing.JTable tabelbarang;
    private javax.swing.JTable tbtransaksi;
    private javax.swing.JTextField txtjumlah;
    // End of variables declaration//GEN-END:variables

}
